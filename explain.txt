

In this project, a covert communication channel between two containers was established using
the Python Scapy module. The sender and receiver containers were defined. The sender encodes
the data into the ID field of the IP packet using Scapy. The receiver then decodes this
ID field to retrieve the original message. This method ensures data confidentiality by 
utilizing the IP identification field. One bit per packet is transmitted, and the 
communication channel is unidirectional. The encoding/decoding algorithm is implemented as follows:

"The sender converts the message into binary values and sends one bit per packet. 
If the bit is 1, the IP identification field starts with numbers like 100, 300, 500 
(e.g., 110, 740). If the bit is 0, a random value starting with numbers like 200, 400,
600 is used. The receiver then decodes these values: numbers starting with 100, 300,
500 are interpreted as 1, and those starting with 200, 400, 600 are interpreted as 0. 
Finally, these binary values are converted back into the text message."

Additionally, the sender logs the data being sent into a .log file, while the 
receiver logs the decoded data into another log file. These log files can be used
to verify the data transmission and decoding process.